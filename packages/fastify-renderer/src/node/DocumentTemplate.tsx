import { FastifyReply, FastifyRequest } from 'fastify'
import template from 'stream-template'

/** Data passed to the template function by the renderer */
export interface TemplateData<Props> {
  /** The content for including in the `<head/>` tag of the rendered document */
  head: NodeJS.ReadableStream
  /** The content for including after the app just before the `</body>` tag of the rendered document */
  tail: NodeJS.ReadableStream
  /** The main content for the app */
  content: string | NodeJS.ReadableStream
  /** The props object generated by the route handler for this render */
  props: Props
  /** The fastify request */
  request: FastifyRequest
  /** The fastify reply */
  reply: FastifyReply
}

/** A template renders out a full HTML document given the content for the document and the scripts for the document, and can optionally grab values out of the props to use for other bits like the page title, metatags, or non-client-side-hydrated body content. */
export type Template = (data: TemplateData<any>) => NodeJS.ReadableStream

export const DefaultDocumentTemplate: Template = (data: TemplateData<any>) => template`
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>${data.props.title || 'Fastify Renderer App'}</title>
    ${data.head}
  </head>
  <body>
    <div id="fstrapp">${data.content}</div>
    ${data.tail}
  </body>
</html>
`
